// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.

// By inheriting the ParticleBase we inherit Texturing and the VSMain/PSMain methods, enough to draw a uniformly colored quad

class ParticleCustomShader : ParticleBase
{
    // -------------------------------------
    // streams
    // -------------------------------------
    
    // This shader is settable by the user, and it's a binary tree made up from smaller shaders
    compose ComputeColor  baseColor;

    // This shader is settable by the user, and it's a binary tree made up from smaller shaders
    compose ComputeColor  baseIntensity;

    // Shading of the sprite - we override the base class's Shading(), which only returns ColorScale
    stage override float4 Shading()
    {
        // -----------------------------------------------
        // Base particle color RGB
        // -----------------------------------------------        
        float4 finalColor = base.Shading() * baseColor.Compute();

        // -----------------------------------------------
        // Base particle alpha
        // -----------------------------------------------        
        finalColor.a    = baseIntensity.Compute();

        //  Don't forget to premultiply the alpha
        finalColor.rgb *= finalColor.aaa; 

        return finalColor;
    }
};

